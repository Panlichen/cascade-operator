apiVersion: v1
kind: ConfigMap
metadata:
  name: half-sleep-go
data:
  half-sleep.go: |
    package main

    import (
      "fmt"
      "time"
    )

    func test() {
      start := time.Now()
      sum := 0
      for i := 0; i < 100000000*35; i++ {
        sum++
      }
      elapsed := time.Since(start)
      fmt.Println("run for: ", elapsed)
    }

    func main() {
      for {
        time.Sleep(1 * time.Second)
        fmt.Println("sleep for: ", 1*time.Second)
        test()
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: half-sleep
spec:
  replicas: 10
  selector:
    matchLabels:
      app: half-sleep
  template:
    metadata:
      labels:
        app: half-sleep
    spec:
      nodeName: node0
      volumes:
      - name: half-sleep-go
        configMap:
          name: half-sleep-go
          items:
          - key: half-sleep.go
            path: half-sleep.go
      containers:
      - name: worker
        image: golang
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: "1000m"
          limits:
            cpu: "1000m"
        command: ["go", "run", "/work/half-sleep.go"]
        volumeMounts:
        - name: half-sleep-go
          mountPath: /work 
